{
  "id": "941D4821-D5B0-4B4B-8E2D-BAE866FD5D85",
  "name": "AXServerAOSAction",
  "friendlyName": "AX Server - AOS service action",
  "description": "Does start, stop or restart an AOS service of AX",
  "helpMarkDown": "[More Information](http://go.microsoft.com/fwlink/?LinkID=613736)",
  "category": "Utility",
  "visibility": [
    "Build",
    "Release"
  ],
  "author": "SDK4NET.de",
  "version": {
    "Major": 0,
    "Minor": 1,
    "Patch": 23
  },
  "demands": [
    "DotNetFramework"
  ],
  "groups": [
  ],
  "inputs": [
    {
      "name": "configurationFileName",
      "type": "filePath",
      "label": "Server config file path (.axc)",
      "defaultValue": "",
      "required": true,
      "helpMarkDown": "The file path to of the server configuration file.",
      "groupName": ""
    },
    {
      "name": "action",
      "type": "pickList",
      "label": "Action",
      "defaultValue": "start",
      "required": true,
      "options": {
        "start": "Start",
        "stop": "Stop",
        "restart": "Restart"
      },
      "helpMarkDown": "Select the action, either Start, Stop or Restart the aos service.",
      "groupName": ""
    },
    {
      "name": "retryIfAssembliesNotWritten",
      "type": "boolean",
      "label": "Retry if assemblies not written",
      "defaultValue": "false",
      "required": false,
      "helpMarkDown": "Retries the action if the assemblies not written to IL folder. (Caution: All assemblies need to be deleted before the service action runs)",
      "visibleRule": "action != stop",
      "groupName": ""
    },
    {
      "name": "symbolsMaximumWaitTime",
      "type": "string",
      "label": "Max wait time (min)",
      "defaultValue": "",
      "required": false,
      "helpMarkDown": "The number of minutes to wait before failing the step",
      "groupName": ""
    }
  ],
  "instanceNameFormat": "SDK4NET.de - AX Server - AOS service action: $(configurationFileName) - $(action)",
  "execution": {
    "PowerShell": {
      "target": "$(currentDirectory)\\Script.ps1",
      "argumentFormat": "",
      "workingDirectory": "$(workingFolder)"
    }
  }
}