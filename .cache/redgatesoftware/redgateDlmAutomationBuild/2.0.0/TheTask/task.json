{
    "id": "7345FE1B-D099-46F0-A0D1-7292CD17FEEE",
    "name": "RedgateDlmAutomationBuild",
    "friendlyName": "Redgate DLM Automation 2: Build",
    "description": "Build and test databases with Redgate's DLM Automation",
    "helpMarkDown": "[More Information](https://documentation.red-gate.com/display/DLMA2/DLM+Automation+2+documentation)",
    "category": "Build",
    "visibility": [
        "Build", "Release"
    ],
    "author": "Redgate Software",
    "version": {
        "Major": 2,
        "Minor": 0,
        "Patch": 0
    },
    "demands": [

    ],
    "minimumAgentVersion": "1.83.0",
    "groups": [
        {
            "name":"nuGetPackageVersionGroup",
            "displayName":"NuGet package version",
            "isExpanded":false
        }
    ],
    "inputs": [
        {
            "name": "operation",
            "type": "pickList",
            "label": "Operation",
            "defaultValue": "Build",
            "required": true,
            "options": {
                "Build": "Build a database package from Redgate SQL Source Control",
                "Test":  "Test a database package built by DLM Automation using tSQLt tests",
                "Publish":  "Publish a database package built by DLM Automation to a NuGet feed",
                "Sync":  "Sync a DLM Automation database package to a target database",
            },
            "helpMarkDown": "Specify the DLM Automation operation you want to perform. Build, test, publish or sync."
        },

        {
            "name": "dbFolder",
            "type": "pickList",
            "label": "Database folder",
            "defaultValue": "SubFolder",
            "required": true,
            "options": {
                "RootFolder": "Database scripts folder is in VCS root",
                "SubFolder": "Database scripts folder is a sub-folder of the VCS root"
            },
            "helpMarkDown": "Specify the location of the source-controlled database you want to build.",
            "visibleRule": "operation = Build"
        },
        {
            "name": "subFolderPath",
            "type": "filePath",
            "label": "Subfolder Path",
            "defaultValue": "",
            "required": true,
            "helpMarkDown": "Select the path to your source-controlled database.",
            "visibleRule": "dbFolder = SubFolder"
        },
        {
            "name": "packageName",
            "type": "string",
            "label": "Output NuGet package ID",
            "defaultValue": "",
            "required": true,
            "helpMarkDown": "A name for the NuGet package you want to build.",
            "visibleRule": "operation = Build"
        },
        {
            "name": "tempServerTypeBuild",
            "type": "pickList",
            "label": "Temporary server type",
            "defaultValue": "localDB",
            "required": true,
            "options": {
                "localDB": "SQL LocalDB (recommended)",
                "sqlServer": "SQL Server"
            },
            "helpMarkDown": "During the build step, DLM Automation builds a copy of your database on a temporary server. By default, it uses LocalDB for this. If your database uses features that are not supported by LocalDB, such as Full-Text Search, you can use a temporary SQL Server database.",
            "visibleRule": "operation = Build"
        },
        {
            "name": "tempServerNameBuild",
            "type": "string",
            "label": "SQL Server",
            "defaultValue": "",
            "required": true,
            "visibleRule": "tempServerTypeBuild = sqlServer"
        },
        {
            "name": "tempDatabaseNameBuild",
            "type": "string",
            "label": "Database",
            "defaultValue": "",
            "required": false,
            "visibleRule": "tempServerTypeBuild = sqlServer",
            "helpMarkDown": "Specify an existing database if you wish to use the same database for each build. If you want to use an Azure SQL Database, you must create a database and give the name here. DLM Automation cannot create a temporary database in Azure SQL Database."
        },
        {
            "name": "authMethodBuild",
            "type": "pickList",
            "label": "Authentication method",
            "defaultValue": "sqlServerAuth",
            "required": true,
            "options": {
                "sqlServerAuth": "SQL Server authentication",
                "windowsAuth": "Windows authentication"
            },
            "visibleRule": "tempServerTypeBuild = sqlServer"
        },
        {
            "name": "usernameBuild",
            "type": "string",
            "label": "Username",
            "defaultValue": "",
            "required": true,
            "visibleRule": "authMethodBuild = sqlServerAuth"
        },
        {
            "name": "passwordBuild",
            "type": "string",
            "label": "Password",
            "defaultValue": "",
            "required": true,
            "visibleRule": "authMethodBuild = sqlServerAuth",
            "helpMarkDown": "Password should reference a secret variable defined on the Variables tab."
        },
        {
            "name": "buildAdvanced",
            "type": "boolean",
            "label": "Show advanced options",
            "defaultValue": "false",
            "required": false,
            "visibleRule": "operation = Build"
        },
        {
            "name": "useDlmDashboard",
            "type": "boolean",
            "label": "DLM Dashboard integration",
            "defaultValue": "false",
            "required": false,
            "helpMarkDown": "Send schema information to DLM Dashboard. When the package is built, DLM Automation sends schema information, as well as the package ID and package version to DLM Dashboard so any subsequent deployments can be recognised.",
            "visibleRule": "buildAdvanced = true"
        },
        {
            "name": "DlmDashboardHost",
            "type": "string",
            "label": "DLM Dashboard host",
            "defaultValue": "localhost",
            "required": true,
            "visibleRule": "useDlmDashboard = true",
            "helpMarkDown": "The hostname of your DLM Dashboard installation."
        },
        {
            "name": "DlmDashboardPort",
            "type": "string",
            "label": "DLM Dashboard port",
            "defaultValue": "19528",
            "required": true,
            "visibleRule": "useDlmDashboard = true",
        },
        {
            "name": "publishArtifact",
            "type": "boolean",
            "label": "Publish Artifact",
            "defaultValue": "true",
            "required": false,
            "helpMarkDown": "Publish the output NuGet package as a build artifact.",
            "visibleRule": "buildAdvanced = true"
        },
		{
            "name": "filterPathBuild",
            "type": "string",
            "label": "Filter path",
            "defaultValue": "",
            "required": false,
            "helpMarkDown": "The path to a .scpf filter file. Overrides any Filter.scpf file present in the input with an alternative filter file to be used when validating and documenting the schema.",
            "visibleRule": "buildAdvanced = true"
        },
		{
            "name": "compareOptionsBuild",
            "type": "string",
            "label": "SQL Compare options",
            "defaultValue": "",
            "required": false,
            "helpMarkDown": "You can turn off the default options or specify additional SQL Compare options.",
            "visibleRule": "buildAdvanced = true"
        },
        {
            "name": "packageId",
            "type": "string",
            "label": "NuGet package ID",
            "defaultValue": "",
            "required": true,
            "helpMarkDown": "The name of the package you want to test, this should be the same as your build step.",
            "visibleRule": "operation = Test"
        },
        {
            "name": "tempServerType",
            "type": "pickList",
            "label": "Temporary server type",
            "defaultValue": "localDB",
            "required": true,
            "options": {
                "localDB": "SQL LocalDB (recommended)",
                "sqlServer": "SQL Server"
            },
            "helpMarkDown": "During the test step, DLM Automation creates a copy of your database on a temporary server. By default, it uses LocalDB for this. If your database uses features that are not supported by LocalDB, such as Full-Text Search, you can use a temporary SQL Server database.",
            "visibleRule": "operation = Test"
        },
        {
            "name": "tempServerName",
            "type": "string",
            "label": "SQL Server",
            "defaultValue": "",
            "required": true,
            "visibleRule": "tempServerType = sqlServer"
        },
        {
            "name": "tempDatabaseName",
            "type": "string",
            "label": "Database",
            "defaultValue": "",
            "required": false,
            "visibleRule": "tempServerType = sqlServer",
            "helpMarkDown": "Specify an existing database if you wish to use the same database for each test step. If you want to use an Azure SQL Database, you must create a database and give the name here. DLM Automation cannot create a temporary database in Azure SQL Database."
        },
        {
            "name": "authMethod",
            "type": "pickList",
            "label": "Authentication Method",
            "defaultValue": "sqlServerAuth",
            "required": true,
            "options": {
                "sqlServerAuth": "SQL Server authentication",
                "windowsAuth": "Windows authentication"
            },
            "visibleRule": "tempServerType = sqlServer"
        },
        {
            "name": "username",
            "type": "string",
            "label": "Username",
            "defaultValue": "",
            "required": true,
            "visibleRule": "authMethod = sqlServerAuth"
        },
        {
            "name": "password",
            "type": "string",
            "label": "Password",
            "defaultValue": "",
            "required": true,
            "visibleRule": "authMethod = sqlServerAuth",
            "helpMarkDown": "Password should reference a secret variable defined on the Variables tab."
        },

        {
            "name": "testAdvanced",
            "type": "boolean",
            "label": "Show advanced options",
            "defaultValue": "false",
            "required": false,
            "visibleRule": "operation = Test"
        },
        {
            "name": "runOnly",
            "type": "string",
            "label": "Run only specified class/test",
            "defaultValue": "",
            "required": false,
            "helpMarkDown": "Enter a single test or test class enclosed in square brackets, for example [testclass].[testname]",
            "visibleRule": "testAdvanced = true"
        },
        {
            "name": "useSqlDataGenerator",
            "type": "boolean",
            "label": "Use Redgate Sql Data Generator",
            "defaultValue": "false",
            "required": false,
            "visibleRule": "testAdvanced = true",
            "helpMarkDown": "Select this option if you want SQL Data Generator to populate your temporary database with test data. Use of SQL Data Generator is not available on hosted build agents."
        },
        {
            "name": "autoSqlDataGenerator",
            "type": "pickList",
            "label": "Generate data",
            "defaultValue": "autoDataGenerator",
            "required": true,
            "options": {
                "autoDataGenerator": "Generate data using SQL Data Generator defaults",
                "dataGeneratorFile": "Generate data using an existing SQL Data Generator project file",
            },
            "visibleRule": "useSqlDataGenerator = true",
            "helpMarkDown": "Choose whether to specify a project file to generate data, or use the SQL Data Generator defaults. By default, SQL Data Generator will automatically generate 1000 rows of test data per table, generated intelligently based on a column's datatype, name and any keys."
        },
        {
            "name": "sqlDataGeneratorFile",
            "type": "filePath",
            "label": "SQL Data Generator project file",
            "defaultValue": "",
            "required": true,
            "visibleRule": "autoSqlDataGenerator = dataGeneratorFile",
            "helpMarkDown": "If you already have a SQL Data Generator project file you wish you use, include the path and filename here."
        },
        {
            "name": "publishTestResults",
            "type": "boolean",
            "label": "Publish test results",
            "defaultValue": "true",
            "required": false,
            "helpMarkDown": "Display the test results in the build summary.",
            "visibleRule": "testAdvanced = true"
        },
        {
            "name": "filterPathTest",
            "type": "string",
            "label": "Filter path",
            "defaultValue": "",
            "required": false,
            "helpMarkDown": "The path to a .scpf filter file. Overrides any Filter.scpf file present in the input with an alternative filter file to be used when validating and documenting the schema.",
            "visibleRule": "testAdvanced = true"
        },
		{
            "name": "compareOptionsTest",
            "type": "string",
            "label": "SQL Compare options",
            "defaultValue": "",
            "required": false,
            "helpMarkDown": "You can turn off the default options or specify additional SQL Compare options.",
            "visibleRule": "testAdvanced = true"
        },
        {
            "name": "packageIdPublish",
            "type": "string",
            "label": "NuGet package ID",
            "defaultValue": "",
            "required": true,
            "helpMarkDown": "The name of the package you want to publish, this should be the same as your build step.",
            "visibleRule": "operation = Publish"
        },
        {
            "name": "nugetFeedUrl",
            "type": "string",
            "label": "NuGet feed URL",
            "defaultValue": "",
            "required": true,
            "helpMarkDown": "The fully-qualified URL for your NuGet feed.",
            "visibleRule": "operation = Publish"
        },
        {
            "name": "nugetFeedApiKey",
            "type": "string",
            "label": "NuGet feed API key",
            "defaultValue": "",
            "required": false,
            "helpMarkDown": "If you're using a private NuGet feed, enter an API key to access the NuGet feed.",
            "visibleRule": "operation = Publish"
        },
        {
            "name": "packageIdSync",
            "type": "string",
            "label": "NuGet package ID",
            "defaultValue": "",
            "required": true,
            "helpMarkDown": "Enter the name of the package you want to use to update the target database. It must be a package built by DLM Automation and should be the same as your build step.",
            "visibleRule": "operation = Sync"
        },
        {
            "name": "targetServerName",
            "type": "string",
            "label": "Server",
            "defaultValue": "",
            "required": true,
            "visibleRule": "operation = Sync"
        },
        {
            "name": "targetDatabaseName",
            "type": "string",
            "label": "Database",
            "defaultValue": "",
            "required": true,
            "visibleRule": "operation = Sync"
        },
        {
            "name": "authMethodSync",
            "type": "pickList",
            "label": "Authentication Method",
            "defaultValue": "sqlServerAuth",
            "required": true,
            "options": {
                "sqlServerAuth": "SQL Server authentication",
                "windowsAuth": "Windows authentication"
            },
            "visibleRule": "operation = Sync"
        },
        {
            "name": "usernameSync",
            "type": "string",
            "label": "Username",
            "defaultValue": "",
            "required": true,
            "visibleRule": "authMethodSync = sqlServerAuth"
        },
        {
            "name": "passwordSync",
            "type": "string",
            "label": "Password",
            "defaultValue": "",
            "required": true,
            "visibleRule": "authMethodSync = sqlServerAuth",
            "helpMarkDown": "Password should reference a secret variable defined on the Variables tab."
        },{
            "name": "syncAdvanced",
            "type": "boolean",
            "label": "Show advanced options",
            "defaultValue": "false",
            "required": false,
            "visibleRule": "operation = Sync"
        },
        {
            "name": "filterPathSync",
            "type": "string",
            "label": "Filter path",
            "defaultValue": "",
            "required": false,
            "helpMarkDown": "The path to a .scpf filter file. Overrides any Filter.scpf file present in the input with an alternative filter file to be used when validating and documenting the schema.",
            "visibleRule": "syncAdvanced = true"
        },
		{
            "name": "compareOptionsSync",
            "type": "string",
            "label": "SQL Compare options",
            "defaultValue": "",
            "required": false,
            "helpMarkDown": "You can turn off the default options or specify additional SQL Compare options.",
            "visibleRule": "syncAdvanced = true"
        },
		{
            "name": "scriptFileSync",
            "type": "string",
            "label": "Script file",
            "defaultValue": "",
            "required": false,
            "helpMarkDown": "File to write the update SQL to. If you supply this optional argument, the update SQL executed to synchronize the database will be written to the specified file as well.",
            "visibleRule": "syncAdvanced = true"
        },
		{
            "name": "abortOnWarningsSync",
            "type": "pickList",
            "label": "Abort on warnings",
            "defaultValue": "none",
            "required": true,
			"options": {
				"none": "None",
				"high": "High",
				"medium": "Medium",
				"low": "Low",
				"information": "Information",
			},
            "helpMarkDown": "If there are deployment warnings at this level or higher, the target database will not be modified. The default value of 'None' means that warnings will be ignored.",
            "visibleRule": "syncAdvanced = true"
        },
		{
            "name": "transactionIsolationLevelSync",
            "type": "pickList",
            "label": "Transaction isolation level",
            "defaultValue": "serializable",
            "required": true,
			"options": {
				"serializable": "Serializable",
				"snapshot": "Snapshot",
				"repeatableRead": "Repeatable Read",
				"readCommitted": "Read Committed",
				"readUncommitted": "Read Uncommitted",
			},
            "helpMarkDown": "Transaction isolation level. The isolation level for the transactions during the sync operation.",
            "visibleRule": "syncAdvanced = true"
        },
        {
            "name": "nugetPackageVersionSelector",
            "type": "pickList",
            "label": "NuGet package version",
            "defaultValue": "Specific",
            "required": true,
            "options": {
                "Specific": "Specify the NuGet package version",
                "BuildNumber": "Use the full build number as the NuGet package version"
            },
            "groupName": "nuGetPackageVersionGroup",
            "helpMarkDown": "Specify the version number for each NuGet package, or use the full Build Number used in this Build Definition. This should be consistent across all DLM Automation build tasks."
        },
        {
            "name": "nugetPackageVersion",
            "type": "string",
            "label": "NuGet package version",
            "defaultValue": "1.0",
            "required": true,
            "helpMarkDown": "The version number in the NuGet package name. This should be consistent across all DLM Automation build tasks. For example: 2.1.",
            "groupName": "nuGetPackageVersionGroup",
            "visibleRule": "nugetPackageVersionSelector = Specific"
        },
        {
            "name": "nugetPackageVersionUseBuildId",
            "type": "boolean",
            "label": "Append BuildId to the NuGet package version",
            "defaultValue": "false",
            "required": false,
            "helpMarkDown": "Make the package version unique for each build by appending the BuildID to the NuGet package version",
            "groupName": "nuGetPackageVersionGroup",
            "visibleRule": "nugetPackageVersionSelector = Specific"
        }
    ],
    "instanceNameFormat": "$(operation) $(packageName)$(packageId)$(packageIdPublish)$(packageIdSync)",
    "execution": {
        "PowerShell": {
            "target": "$(currentDirectory)\\DlmAutomationBuild.ps1",
            "argumentFormat": "",
            "workingDirectory": "$(currentDirectory)"
        }
    }
}
