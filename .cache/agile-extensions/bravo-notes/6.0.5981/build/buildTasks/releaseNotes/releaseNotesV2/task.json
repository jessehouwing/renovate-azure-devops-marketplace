{
    "id": "665e300e-f163-48a6-aa33-589213df991c",
    "name": "releaseNotes",
    "friendlyName": "Bravo Notes - Compile release notes",
    "description": "Bravo Notes - Compile release notes. Generate release notes as Markdown, HTML or PDF documents.",
    "helpUrl": "https://help.agileextensions.com/article/17-build-task",
    "helpMarkDown": "[Learn more about this task](https://help.agileextensions.com/article/17-build-task)",
    "author": "Agile Extensions",
    "category": "Utility",
    "visibility": [
        "Build",
        "Release"
    ],
    "version": {
        "Major": 2,
        "Minor": 356,
        "Patch": 0
    },
    "minimumAgentVersion": "2.144.0",
    "instanceNameFormat": "Release Notes",
    "groups": [
        {
            "name": "advanced",
            "displayName": "Advanced",
            "isExpanded": false
        }
    ],
    "inputs": [
        {
            "name": "notes",
            "type": "pickList",
            "label": "Bravo Notes template",
            "defaultValue": "",
            "required": true,
            "properties": {
                "EditableOptions": "True"
            },
            "helpMarkDown": "Choose a template previously created via the Bravo Notes UI."
        },
        {
            "name": "workItemSource",
            "type": "pickList",
            "label": "Work item source",
            "defaultValue": "Associated",
            "required": true,
            "options": {
                "Associated": "Associated Work items",
                "AssociatedSinceCommit": "Associated Work items since specified starting commit",
                "CompareWithRelease": "Compare with release environment",
                "CompareWithEnvironment": "Compare with environment (YAML)",
                "Query": "Query",
                "CurrentIteration": "Iteration: Current",
                "LastIteration": "Iteration: Current - 1",
                "NextIteration": "Iteration: Current + 1",
                "JsonFile": "JSON file"
            },
            "helpMarkDown": "Specify what work items should be pulled into the template. Associated Work items = Work items associated with the current build or the current release. The latter only pulls in Work items associated since the last successful deployment of the current environment. When using JSON file as source the expected format is a array of objects with an \"id\" property e.g. [{\"id\": 345}, {\"id\": 654}]"
        },
        {
            "name": "compareWithReleaseDefinition",
            "type": "pickList",
            "label": "Release definition to compare",
            "defaultValue": "",
            "required": true,
            "visibleRule": "workItemSource = CompareWithRelease",
            "helpMarkDown": "Release definition to compare against"
        },
        {
            "name": "compareWithReleaseEnvironment",
            "type": "pickList",
            "label": "Release definition environment to compare",
            "defaultValue": "",
            "required": true,
            "visibleRule": "workItemSource = CompareWithRelease ",
            "helpMarkDown": "Release definition environment to compare against"
        },
        {
            "name": "compareWithEnvironment",
            "type": "pickList",
            "label": "Environment to compare",
            "defaultValue": "",
            "required": true,
            "visibleRule": "workItemSource = CompareWithEnvironment",
            "helpMarkDown": "Environment to compare against"
        },
        {
            "name": "fromCommit",
            "type": "string",
            "label": "Starting commit",
            "defaultValue": "",
            "required": true,
            "visibleRule": "workItemSource = AssociatedSinceCommit",
            "helpMarkDown": "When looking for work items Bravo Notes will consider past commits after the specified starting commit."
        },
        {
            "name": "workItemTypeResolving",
            "type": "pickList",
            "label": "Work items to resolve",
            "defaultValue": "Associated",
            "required": true,
            "options": {
                "Associated": "All directly associated Work items",
                "ParentWorkItems": "Selected types (directly associated or parents)"
            },
            "helpMarkDown": "Chose to load work items directly associated to the build / release or to load parent work items of the specified type.",
            "visibleRule": "workItemSource = Associated || workItemSource = AssociatedSinceCommit || workItemSource = JsonFile"
        },
        {
            "name": "workItemTypesToLoad",
            "type": "multiLine",
            "label": "Work Item types",
            "required": true,
            "helpMarkDown": "Specify one work item type name per line",
            "visibleRule": "workItemTypeResolving = ParentWorkItems"
        },
        {
            "name": "queryId",
            "type": "querycontrol",
            "label": "Query",
            "defaultValue": "",
            "required": "true",
            "helpMarkDown": "Select a saved Work Item query to execute.",
            "visibleRule": "workItemSource = Query"
        },
        {
            "name": "workItemSourceIterationTeam",
            "type": "pickList",
            "label": "Team",
            "required": true,
            "visibleRule": "workItemSource = CurrentIteration || workItemSource = LastIteration || workItemSource = NextIteration"
        },
        {
            "name": "inputFilePath",
            "type": "filePath",
            "label": "Input file path",
            "defaultValue": "",
            "required": true,
            "visibleRule": "workItemSource = JsonFile",
            "helpMarkDown": "Path to read from item data from"
        },
        {
            "name": "outputFormat",
            "type": "pickList",
            "label": "Output format",
            "defaultValue": "md",
            "required": true,
            "options": {
                "md": "Markdown",
                "html": "HTML",
                "pdf": "PDF"
            },
            "helpMarkDown": "Format of the rendered document"
        },
        {
            "name": "handleImages",
            "type": "pickList",
            "label": "Handle images",
            "defaultValue": "none",
            "required": true,
            "options": {
                "none": "Keep as is",
                "local": "Download to images folder",
                "public": "Publish and host on bravonotes.com"
            },
            "helpMarkDown": "If images are included in the generated document, this option controls how to handle them. Image URLs will be adjusted accordingly.",
            "visibleRule": "outputFormat = html || outputFormat = md"
        },
        {
            "name": "outputTarget",
            "type": "pickList",
            "label": "Output target",
            "defaultValue": "file",
            "required": true,
            "options": {
                "file": "File",
                "wiki": "Wiki",
                "repository": "Repository",
                "confluence": "Confluence (Preview)"
            },
            "helpMarkDown": "Target to store the rendered document"
        },
        {
            "name": "alternateTargetProject",
            "type": "boolean",
            "label": "Alternate target project",
            "defaultValue": false,
            "required": false,
            "visibleRule": "outputTarget = Wiki",
            "helpMarkDown": "Choose a team project different from the project where this pipeline is defined when exporting to a Wiki",
            "groupName": "advanced"
        },
        {
            "name": "targetProject",
            "type": "pickList",
            "label": "Target Project",
            "required": true,
            "visibleRule": "outputTarget = Wiki && alternateTargetProject = true",
            "helpMarkDown": "Project to export to"
        },
        {
            "name": "outputFilePath",
            "type": "filePath",
            "label": "Output file path",
            "defaultValue": "",
            "required": true,
            "visibleRule": "outputTarget = File",
            "helpMarkDown": "Path to write rendered notes to e.g. releasenotes.pdf"
        },
        {
            "name": "targetRepository",
            "type": "pickList",
            "label": "Target repository",
            "defaultValue": "",
            "required": true,
            "visibleRule": "outputTarget = repository",
            "helpMarkDown": "Git repository to store the generated file",
            "properties": {
                "EditableOptions": "True"
            }
        },
        {
            "name": "targetRepositoryBranch",
            "type": "pickList",
            "label": "Target branch",
            "defaultValue": "master",
            "required": true,
            "visibleRule": "outputTarget = repository",
            "helpMarkDown": "Branch in to commit the generated file to",
            "properties": {
                "EditableOptions": "True"
            }
        },
        {
            "name": "targetRepositoryPath",
            "type": "string",
            "label": "File path",
            "defaultValue": "",
            "required": true,
            "visibleRule": "outputTarget = repository",
            "helpMarkDown": "Path in selected repository to save generated file to"
        },
        {
            "name": "targetRepositoryCommitMessage",
            "type": "string",
            "label": "Commit message",
            "defaultValue": "Adds release notes generated in pipeline",
            "required": true,
            "visibleRule": "outputTarget = repository",
            "helpMarkDown": "Commit message to use for adding the generated file to the selected repository"
        },
        {
            "name": "targetRepositoryCommitAuthorEmail",
            "type": "string",
            "label": "Commit author email",
            "defaultValue": "",
            "required": false,
            "visibleRule": "outputTarget = repository",
            "helpMarkDown": "Auhtor email to use for the commit"
        },
        {
            "name": "targetWiki",
            "type": "pickList",
            "label": "Target Wiki",
            "defaultValue": "",
            "required": true,
            "visibleRule": "outputTarget = Wiki",
            "helpMarkDown": "Wiki to store the generated markdown file"
        },
        {
            "name": "targetWikiPath",
            "type": "string",
            "label": "Wiki page path",
            "defaultValue": "",
            "required": true,
            "visibleRule": "outputTarget = Wiki",
            "helpMarkDown": "Path to Wiki page to write rendered notes to.\n\nBravo Notes syntax supported e.g. `My daily page from {{date 'dd.mm.yyyy'}}`.\n\nExamples:\n\nTarget page\n\nParent page/Target page"
        },
        {
            "name": "targetWikiBranch",
            "type": "string",
            "label": "Wiki branch (only needed for Code Wikis)",
            "defaultValue": "",
            "visibleRule": "outputTarget = Wiki",
            "helpMarkDown": "Branch of the repository backing the selected wiki to push to"
        },
        {
            "name": "targetWikiPdfAttachment",
            "type": "boolean",
            "label": "Attach PDF to Wiki page",
            "defaultValue": "",
            "required": true,
            "visibleRule": "outputTarget = Wiki",
            "helpMarkDown": "Generate and attach a PDF version at the bottom of the target wiki page. Use the `@wikiPagePdfAttachmentPath` placeholder in your template to customize the placement of the attachment link."
        },
        {
            "name": "confluenceOrgName",
            "type": "string",
            "label": "Confluence org name",
            "defaultValue": "",
            "required": true,
            "visibleRule": "outputTarget = confluence",
            "helpMarkDown": ""
        },
        {
            "name": "confluenceUserName",
            "type": "string",
            "label": "Confluence user name",
            "defaultValue": "",
            "required": true,
            "visibleRule": "outputTarget = confluence",
            "helpMarkDown": ""
        },
        {
            "name": "confluenceApiToken",
            "type": "string",
            "label": "Confluence api token",
            "defaultValue": "",
            "required": true,
            "visibleRule": "outputTarget = confluence",
            "helpMarkDown": "You can generate an API token [here](https://id.atlassian.com/manage-profile/security/api-tokens)"
        },
        {
            "name": "confluenceSpaceKey",
            "type": "string",
            "label": "Confluence space key",
            "defaultValue": "",
            "required": true,
            "visibleRule": "outputTarget = confluence",
            "helpMarkDown": ""
        },
        {
            "name": "confluencePageTitle",
            "type": "string",
            "label": "Confluence page title",
            "defaultValue": "",
            "required": true,
            "visibleRule": "outputTarget = confluence",
            "helpMarkDown": "Title of the page to create or update.\n\nBravo Notes syntax supported e.g. `My daily page from {{date 'dd.mm.yyyy'}}`"
        },
        {
            "name": "confluenceParentPageId",
            "type": "string",
            "label": "Confluence target parent page id",
            "defaultValue": "",
            "required": false,
            "visibleRule": "outputTarget = confluence",
            "helpMarkDown": ""
        },
        {
            "name": "confluenceParentPagePath",
            "type": "multiLine",
            "label": "Confluence parent pages",
            "defaultValue": "",
            "required": false,
            "visibleRule": "outputTarget = confluence",
            "helpMarkDown": "List of parent/ancestor page titles - one per line. Non-existent pages will be created.\n\nBravo Notes syntax supported e.g. `My daily page from {{date 'dd.mm.yyyy'}}`\n\nThis option takes precendence over the \"Confluence parent page id\" option.\n\nExample:\n\nRoot page\\\nChild of root page\\\nParent of target page"
        },
        {
            "name": "confluenceUseV2Editor",
            "type": "boolean",
            "label": "Confluence use new editor for new pages",
            "defaultValue": true,
            "required": false
        },
        {
            "name": "emptyWorkItemListTaskResult",
            "type": "picklist",
            "label": "Handle empty work item list",
            "options": {
                "info": "Info - task should succeed",
                "warn": "Warn - task should succeed with a warning",
                "fail": "Fail - task should fail"
            },
            "defaultValue": "info",
            "required": false,
            "helpMarkDown": "Control the result of the task in case no work items are found."
        },
        {
            "name": "skipExportOnEmptyWorkItemList",
            "type": "boolean",
            "label": "Skip export on empty work item list",
            "defaultValue": false,
            "required": false,
            "helpMarkDown": "Don't export if no work items are found."
        },
        {
            "name": "addAttachment",
            "type": "boolean",
            "label": "Add attachment to pipeline result",
            "defaultValue": false,
            "required": false,
            "helpMarkDown": "Uses the markdown representation of the template rendering and publishes it to Azure Pipelines so it can be permanently seen in the pipeline summary page."
        },
        {
            "name": "attachmentTitle",
            "type": "string",
            "label": "Attachment title",
            "defaultValue": "Release Notes",
            "required": true,
            "visibleRule": "addAttachment = true",
            "helpMarkDown": ""
        },
        {
            "name": "proxy",
            "type": "pickList",
            "label": "HTTPS Proxy",
            "options": {
                "off": "Off - don't connect via proxy",
                "auto": "Auto - use agent and environment proxy settings"
            },
            "defaultValue": "off",
            "helpMarkDown": "When set to `Auto` - proxy settings from your build agent (`.proxy` file) and environment variables `HTTP_PROXY`, `HTTPS_PROXY` and `NO_PROXY` will be respected.\n\n`Auto` will become the default in future versions. ",
            "groupName": "advanced"
        },
        {
            "name": "stopLabel",
            "type": "string",
            "label": "Stop label key",
            "defaultValue": "",
            "required": false,
            "helpMarkDown": "When looking up the work item hierarchy from associated work items, when a work item with the specified stop label is found parents of that item will not be imported.",
            "groupName": "advanced"
        },
        {
            "name": "publishToTeams",
            "type": "boolean",
            "label": "Post message to Microsoft Teams (Preview)",
            "defaultValue": false,
            "required": false,
            "helpMarkDown": "Subscribe via 'subscribe {organization}' in any channel to receive messages when new release notes are generated. Contact support@agileextensions.com to learn more.",
            "groupName": "advanced"
        },
        {
            "name": "publishToTeamsTitle",
            "type": "string",
            "label": "Title - used when posting message to Microsoft Teams (Preview)",
            "required": false,
            "helpMarkDown": "Markdown is supported",
            "groupName": "advanced"
        },
        {
            "name": "publishToTeamsDescription",
            "type": "string",
            "label": "Description - used when posting message to Microsoft Teams (Preview)",
            "required": false,
            "helpMarkDown": "Markdown is supported",
            "groupName": "advanced"
        }
    ],
    "dataSourceBindings": [
        {
            "target": "notes",
            "endpointId": "tfs:ems",
            "endpointUrl": "{{endpoint.url}}/_apis/ExtensionManagement/InstalledExtensions/agile-extensions/bravo-notes/Data/Scopes/Default/Current/Collections/rn-index/Documents",
            "resultSelector": "jsonpath:$.value[*]",
            "resultTemplate": "{ \"Value\" : \"{{{id}}}\", \"DisplayValue\" : \"{{{title}}}\" }"
        },
        {
            "target": "compareWithReleaseDefinition",
            "endpointId": "tfs:rm",
            "endpointUrl": "{{endpoint.url}}/{{system.teamProject}}/_apis/release/definitions",
            "resultSelector": "jsonpath:$.value[*]",
            "resultTemplate": "{ \"Value\" : \"{{{id}}}\", \"DisplayValue\" : \"{{{name}}}\" }"
        },
        {
            "target": "compareWithReleaseEnvironment",
            "endpointId": "tfs:rm",
            "parameters": {
                "selectedDefinition": "$(compareWithReleaseDefinition)"
            },
            "endpointUrl": "{{endpoint.url}}/{{system.teamProject}}/_apis/release/definitions/{{selectedDefinition}}",
            "resultSelector": "jsonpath:$.environments[*]",
            "resultTemplate": "{ \"Value\" : \"{{{id}}}\", \"DisplayValue\" : \"{{{name}}}\" }"
        },
        {
            "target": "compareWithEnvironment",
            "endpointId": "tfs:teamfoundation",
            "endpointUrl": "{{endpoint.url}}/{{system.teamProject}}/_apis/distributedtask/environments",
            "resultSelector": "jsonpath:$.value[*]",
            "resultTemplate": "{ \"Value\" : \"{{{id}}}\", \"DisplayValue\" : \"{{{name}}}\" }"
        },
        {
            "target": "targetProject",
            "endpointId": "tfs:teamfoundation",
            "endpointUrl": "{{endpoint.url}}/_apis/projects",
            "resultSelector": "jsonpath:$.value[*]",
            "resultTemplate": "{ \"Value\" : \"{{{id}}}\", \"DisplayValue\" : \"{{{name}}}\" }"
        },
        {
            "target": "workItemSourceIterationTeam",
            "endpointId": "tfs:teamfoundation",
            "endpointUrl": "{{endpoint.url}}/_apis/projects/{{system.teamProject}}/teams",
            "resultSelector": "jsonpath:$.value[*]",
            "resultTemplate": "{ \"Value\" : \"{{{id}}}\", \"DisplayValue\" : \"{{{name}}}\" }"
        },
        {
            "target": "targetWiki",
            "endpointId": "tfs:teamfoundation",
            "parameters": {
                "targetProject": "$(targetProject)",
                "alternateTargetProject": "$(alternateTargetProject)"
            },
            "endpointUrl": "{{endpoint.url}}/{{#equals alternateTargetProject 'true'}}{{targetProject}}{{else}}{{system.teamProject}}{{/equals}}/_apis/wiki/wikis?api-version=4.1-preview",
            "resultSelector": "jsonpath:$.value[*]",
            "resultTemplate": "{ \"Value\" : \"{{{id}}}\", \"DisplayValue\" : \"{{{name}}}\" }"
        },
        {
            "target": "targetRepository",
            "endpointId": "tfs:teamfoundation",
            "endpointUrl": "{{endpoint.url}}/{{system.teamProject}}/_apis/git/repositories",
            "resultSelector": "jsonpath:$.value[*]",
            "resultTemplate": "{ \"Value\" : \"{{{id}}}\", \"DisplayValue\" : \"{{{name}}}\" }"
        },
        {
            "target": "targetRepositoryBranch",
            "endpointId": "tfs:teamfoundation",
            "parameters": {
                "targetRepository": "$(targetRepository)"
            },
            "endpointUrl": "{{endpoint.url}}/{{system.teamProject}}/_apis/git/repositories/{{targetRepository}}/stats/branches",
            "resultSelector": "jsonpath:$.value[*]",
            "resultTemplate": "{ \"Value\" : \"{{{name}}}\", \"DisplayValue\" : \"{{{name}}}\" }"
        }
    ],
    "execution": {
        "Node": {
            "target": "run.js",
            "argumentFormat": ""
        }
    }
}